<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="247px" preserveAspectRatio="none" style="width:412px;height:247px;" version="1.1" viewBox="0 0 412 247" width="412px" zoomAndPan="magnify"><defs><filter height="300%" id="f1govxmh277lwb" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="283" x="68" y="16.708">ProblemSolving - Class Diagram</text><!--MD5=[1e036e9b4722bf1c261efb4a2a311509]
class Factorial--><rect fill="#FEFECE" filter="url(#f1govxmh277lwb)" height="60.8047" id="Factorial" style="stroke: #A80036; stroke-width: 1.5;" width="191" x="6" y="28.9531"/><ellipse cx="70.25" cy="44.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M73.2188,50.5938 Q72.6406,50.8906 72,51.0313 Q71.3594,51.1875 70.6563,51.1875 Q68.1563,51.1875 66.8281,49.5469 Q65.5156,47.8906 65.5156,44.7656 Q65.5156,41.6406 66.8281,39.9844 Q68.1563,38.3281 70.6563,38.3281 Q71.3594,38.3281 72,38.4844 Q72.6563,38.6406 73.2188,38.9375 L73.2188,41.6563 Q72.5938,41.0781 72,40.8125 Q71.4063,40.5313 70.7813,40.5313 Q69.4375,40.5313 68.75,41.6094 Q68.0625,42.6719 68.0625,44.7656 Q68.0625,46.8594 68.75,47.9375 Q69.4375,49 70.7813,49 Q71.4063,49 72,48.7344 Q72.5938,48.4531 73.2188,47.875 L73.2188,50.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="54" x="90.75" y="49.1074">Factorial</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="196" y1="60.9531" y2="60.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="196" y1="68.9531" y2="68.9531"/><ellipse cx="17" cy="79.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="26" y="83.1636">static int SolveFactorial(int n)</text><!--MD5=[05f8f5a12c1ae56700166ce571d390cb]
class ArrayMethods--><rect fill="#FEFECE" filter="url(#f1govxmh277lwb)" height="60.8047" id="ArrayMethods" style="stroke: #A80036; stroke-width: 1.5;" width="169" x="232" y="28.9531"/><ellipse cx="269.95" cy="44.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M272.9188,50.5938 Q272.3406,50.8906 271.7,51.0313 Q271.0594,51.1875 270.3563,51.1875 Q267.8563,51.1875 266.5281,49.5469 Q265.2156,47.8906 265.2156,44.7656 Q265.2156,41.6406 266.5281,39.9844 Q267.8563,38.3281 270.3563,38.3281 Q271.0594,38.3281 271.7,38.4844 Q272.3563,38.6406 272.9188,38.9375 L272.9188,41.6563 Q272.2938,41.0781 271.7,40.8125 Q271.1063,40.5313 270.4813,40.5313 Q269.1375,40.5313 268.45,41.6094 Q267.7625,42.6719 267.7625,44.7656 Q267.7625,46.8594 268.45,47.9375 Q269.1375,49 270.4813,49 Q271.1063,49 271.7,48.7344 Q272.2938,48.4531 272.9188,47.875 L272.9188,50.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="289.05" y="49.1074">ArrayMethods</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="233" x2="400" y1="60.9531" y2="60.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="233" x2="400" y1="68.9531" y2="68.9531"/><ellipse cx="243" cy="79.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="252" y="83.1636">static int Sum(int[] array)</text><!--MD5=[9dd067393df614930dedc7a110b3d8fd]
class Fibonacci--><rect fill="#FEFECE" filter="url(#f1govxmh277lwb)" height="60.8047" id="Fibonacci" style="stroke: #A80036; stroke-width: 1.5;" width="184" x="9.5" y="162.4531"/><ellipse cx="67.75" cy="178.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70.7188,184.0938 Q70.1406,184.3906 69.5,184.5313 Q68.8594,184.6875 68.1563,184.6875 Q65.6563,184.6875 64.3281,183.0469 Q63.0156,181.3906 63.0156,178.2656 Q63.0156,175.1406 64.3281,173.4844 Q65.6563,171.8281 68.1563,171.8281 Q68.8594,171.8281 69.5,171.9844 Q70.1563,172.1406 70.7188,172.4375 L70.7188,175.1563 Q70.0938,174.5781 69.5,174.3125 Q68.9063,174.0313 68.2813,174.0313 Q66.9375,174.0313 66.25,175.1094 Q65.5625,176.1719 65.5625,178.2656 Q65.5625,180.3594 66.25,181.4375 Q66.9375,182.5 68.2813,182.5 Q68.9063,182.5 69.5,182.2344 Q70.0938,181.9531 70.7188,181.375 L70.7188,184.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="59" x="88.25" y="182.6074">Fibonacci</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="10.5" x2="192.5" y1="194.4531" y2="194.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="10.5" x2="192.5" y1="202.4531" y2="202.4531"/><ellipse cx="20.5" cy="213.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="29.5" y="216.6636">static int GetFibonacci(int n)</text><!--MD5=[8c9078384c8216faeee668eb33da04e9]
class TreeNode--><rect fill="#FEFECE" filter="url(#f1govxmh277lwb)" height="86.4141" id="TreeNode" style="stroke: #A80036; stroke-width: 1.5;" width="138" x="228.5" y="149.9531"/><ellipse cx="258.8" cy="165.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M261.7688,171.5938 Q261.1906,171.8906 260.55,172.0313 Q259.9094,172.1875 259.2063,172.1875 Q256.7063,172.1875 255.3781,170.5469 Q254.0656,168.8906 254.0656,165.7656 Q254.0656,162.6406 255.3781,160.9844 Q256.7063,159.3281 259.2063,159.3281 Q259.9094,159.3281 260.55,159.4844 Q261.2063,159.6406 261.7688,159.9375 L261.7688,162.6563 Q261.1438,162.0781 260.55,161.8125 Q259.9563,161.5313 259.3313,161.5313 Q257.9875,161.5313 257.3,162.6094 Q256.6125,163.6719 256.6125,165.7656 Q256.6125,167.8594 257.3,168.9375 Q257.9875,170 259.3313,170 Q259.9563,170 260.55,169.7344 Q261.1438,169.4531 261.7688,168.875 L261.7688,171.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="61" x="276.2" y="170.1074">TreeNode</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="360.5" y="146.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="361.5" y="159.0918">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="229.5" x2="365.5" y1="181.9531" y2="181.9531"/><ellipse cx="239.5" cy="192.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="248.5" y="196.1636">T Value</text><ellipse cx="239.5" cy="205.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="248.5" y="208.9683">TreeNode&lt;T&gt; Left</text><ellipse cx="239.5" cy="218.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="248.5" y="221.7729">TreeNode&lt;T&gt; Right</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="229.5" x2="365.5" y1="228.3672" y2="228.3672"/><!--MD5=[ed3964f5425fdb513e6b3ea6cc4e05bb]
link Factorial to ArrayMethods--><!--MD5=[8488826e829bb3b469ef21d79e782669]
link Factorial to Fibonacci--><!--MD5=[91b4657139ccbb5fa46630387dfb1f85]
link Fibonacci to TreeNode--><!--MD5=[dd9c458c74446079079855c4f7b9c5ee]
@startuml
title ProblemSolving - Class Diagram
class Factorial {
  +static int SolveFactorial(int n)
}
class ArrayMethods {
  +static int Sum(int[] array)
}
class Fibonacci {
  +static int GetFibonacci(int n)
}
class TreeNode<T> {
  +T Value
  +TreeNode<T> Left
  +TreeNode<T> Right
}
@enduml

PlantUML version 1.2020.02(Sun Mar 01 06:22:07 BOT 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 21.0.7+6-Ubuntu-0ubuntu124.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>