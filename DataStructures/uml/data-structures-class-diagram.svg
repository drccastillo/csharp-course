<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="452px" preserveAspectRatio="none" style="width:655px;height:452px;" version="1.1" viewBox="0 0 655 452" width="655px" zoomAndPan="magnify"><defs><filter height="300%" id="f1hc65l2c5d5l5" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="276" x="192" y="16.708">DataStructures - Class Diagram</text><!--MD5=[3aa63a95ef306c44c362494faf3eb527]
class DynamicArray--><rect fill="#FEFECE" filter="url(#f1hc65l2c5d5l5)" height="201.6563" id="DynamicArray" style="stroke: #A80036; stroke-width: 1.5;" width="220" x="6" y="28.9531"/><ellipse cx="64.25" cy="44.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M67.2188,50.5938 Q66.6406,50.8906 66,51.0313 Q65.3594,51.1875 64.6563,51.1875 Q62.1563,51.1875 60.8281,49.5469 Q59.5156,47.8906 59.5156,44.7656 Q59.5156,41.6406 60.8281,39.9844 Q62.1563,38.3281 64.6563,38.3281 Q65.3594,38.3281 66,38.4844 Q66.6563,38.6406 67.2188,38.9375 L67.2188,41.6563 Q66.5938,41.0781 66,40.8125 Q65.4063,40.5313 64.7813,40.5313 Q63.4375,40.5313 62.75,41.6094 Q62.0625,42.6719 62.0625,44.7656 Q62.0625,46.8594 62.75,47.9375 Q63.4375,49 64.7813,49 Q65.4063,49 66,48.7344 Q66.5938,48.4531 67.2188,47.875 L67.2188,50.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="84" x="84.75" y="49.1074">DynamicArray</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="220" y="25.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="221" y="38.0918">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="225" y1="60.9531" y2="60.9531"/><ellipse cx="17" cy="71.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="26" y="75.1636">int Count</text><ellipse cx="17" cy="84.7578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="26" y="87.9683">int Capacity</text><ellipse cx="17" cy="97.5625" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="26" y="100.7729">T this[int index]</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="225" y1="107.3672" y2="107.3672"/><ellipse cx="17" cy="118.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="26" y="121.5776">T Get(int index)</text><ellipse cx="17" cy="131.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="26" y="134.3823">void Set(int index, T value)</text><ellipse cx="17" cy="143.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="26" y="147.187">void Add(T item)</text><ellipse cx="17" cy="156.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="26" y="159.9917">void InsertAt(int index, T item)</text><ellipse cx="17" cy="169.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="26" y="172.7964">void RemoveAt(int index)</text><ellipse cx="17" cy="182.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="26" y="185.6011">void Clear()</text><ellipse cx="17" cy="195.1953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="26" y="198.4058">bool Contains(T item)</text><ellipse cx="17" cy="208" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="26" y="211.2104">int IndexOf(T item)</text><ellipse cx="17" cy="220.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="26" y="224.0151">IEnumerator&lt;T&gt; GetEnumerator()</text><!--MD5=[b5fb6bf1d0c094065f51618994b8f173]
class CustomLinkedList--><rect fill="#FEFECE" filter="url(#f1hc65l2c5d5l5)" height="163.2422" id="CustomLinkedList" style="stroke: #A80036; stroke-width: 1.5;" width="220" x="261" y="48.4531"/><ellipse cx="307.25" cy="64.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M310.2188,70.0938 Q309.6406,70.3906 309,70.5313 Q308.3594,70.6875 307.6563,70.6875 Q305.1563,70.6875 303.8281,69.0469 Q302.5156,67.3906 302.5156,64.2656 Q302.5156,61.1406 303.8281,59.4844 Q305.1563,57.8281 307.6563,57.8281 Q308.3594,57.8281 309,57.9844 Q309.6563,58.1406 310.2188,58.4375 L310.2188,61.1563 Q309.5938,60.5781 309,60.3125 Q308.4063,60.0313 307.7813,60.0313 Q306.4375,60.0313 305.75,61.1094 Q305.0625,62.1719 305.0625,64.2656 Q305.0625,66.3594 305.75,67.4375 Q306.4375,68.5 307.7813,68.5 Q308.4063,68.5 309,68.2344 Q309.5938,67.9531 310.2188,67.375 L310.2188,70.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="327.75" y="68.6074">CustomLinkedList</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="475" y="45.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="476" y="57.5918">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="262" x2="480" y1="80.4531" y2="80.4531"/><ellipse cx="272" cy="91.4531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="281" y="94.6636">int Count</text><ellipse cx="272" cy="104.2578" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="281" y="107.4683">T this[int index]</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="262" x2="480" y1="114.0625" y2="114.0625"/><ellipse cx="272" cy="125.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="281" y="128.2729">void AddFirst(T value)</text><ellipse cx="272" cy="137.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="281" y="141.0776">void AddLast(T value)</text><ellipse cx="272" cy="150.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="281" y="153.8823">bool TryRemove(T value)</text><ellipse cx="272" cy="163.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="281" y="166.687">bool Contains(T value)</text><ellipse cx="272" cy="176.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="281" y="179.4917">T Get(int index)</text><ellipse cx="272" cy="189.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="281" y="192.2964">void Clear()</text><ellipse cx="272" cy="201.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="281" y="205.1011">IEnumerator&lt;T&gt; GetEnumerator()</text><!--MD5=[b4cae84be8cd8acbbb49daa6cbe1ccfb]
class CustomStack--><rect fill="#FEFECE" filter="url(#f1hc65l2c5d5l5)" height="112.0234" id="CustomStack" style="stroke: #A80036; stroke-width: 1.5;" width="125" x="516.5" y="73.9531"/><ellipse cx="531.5" cy="89.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M534.4688,95.5938 Q533.8906,95.8906 533.25,96.0313 Q532.6094,96.1875 531.9063,96.1875 Q529.4063,96.1875 528.0781,94.5469 Q526.7656,92.8906 526.7656,89.7656 Q526.7656,86.6406 528.0781,84.9844 Q529.4063,83.3281 531.9063,83.3281 Q532.6094,83.3281 533.25,83.4844 Q533.9063,83.6406 534.4688,83.9375 L534.4688,86.6563 Q533.8438,86.0781 533.25,85.8125 Q532.6563,85.5313 532.0313,85.5313 Q530.6875,85.5313 530,86.6094 Q529.3125,87.6719 529.3125,89.7656 Q529.3125,91.8594 530,92.9375 Q530.6875,94 532.0313,94 Q532.6563,94 533.25,93.7344 Q533.8438,93.4531 534.4688,92.875 L534.4688,95.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="545.5" y="94.1074">CustomStack</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="635.5" y="70.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="636.5" y="83.0918">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="517.5" x2="640.5" y1="105.9531" y2="105.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="517.5" x2="640.5" y1="113.9531" y2="113.9531"/><ellipse cx="527.5" cy="124.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="536.5" y="128.1636">void Push(T item)</text><ellipse cx="527.5" cy="137.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="40" x="536.5" y="140.9683">T Pop()</text><ellipse cx="527.5" cy="150.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="536.5" y="153.7729">T Peek()</text><ellipse cx="527.5" cy="163.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="536.5" y="166.5776">bool IsEmpty()</text><ellipse cx="527.5" cy="176.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="536.5" y="179.3823">T[] ToArray()</text><!--MD5=[e044eeb8ee2363764ee438affe3f5539]
class CustomQueue--><rect fill="#FEFECE" filter="url(#f1hc65l2c5d5l5)" height="112.0234" id="CustomQueue" style="stroke: #A80036; stroke-width: 1.5;" width="146" x="43" y="309.9531"/><ellipse cx="64.75" cy="325.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M67.7188,331.5938 Q67.1406,331.8906 66.5,332.0313 Q65.8594,332.1875 65.1563,332.1875 Q62.6563,332.1875 61.3281,330.5469 Q60.0156,328.8906 60.0156,325.7656 Q60.0156,322.6406 61.3281,320.9844 Q62.6563,319.3281 65.1563,319.3281 Q65.8594,319.3281 66.5,319.4844 Q67.1563,319.6406 67.7188,319.9375 L67.7188,322.6563 Q67.0938,322.0781 66.5,321.8125 Q65.9063,321.5313 65.2813,321.5313 Q63.9375,321.5313 63.25,322.6094 Q62.5625,323.6719 62.5625,325.7656 Q62.5625,327.8594 63.25,328.9375 Q63.9375,330 65.2813,330 Q65.9063,330 66.5,329.7344 Q67.0938,329.4531 67.7188,328.875 L67.7188,331.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="88" x="80.25" y="330.1074">CustomQueue</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="183" y="306.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="184" y="319.0918">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="44" x2="188" y1="341.9531" y2="341.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="44" x2="188" y1="349.9531" y2="349.9531"/><ellipse cx="54" cy="360.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="63" y="364.1636">void Enqueue(T item)</text><ellipse cx="54" cy="373.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="63" y="376.9683">T Dequeue()</text><ellipse cx="54" cy="386.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="63" y="389.7729">T Peek()</text><ellipse cx="54" cy="399.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="63" y="402.5776">bool IsEmpty()</text><ellipse cx="54" cy="412.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="63" y="415.3823">T[] ToArray()</text><!--MD5=[35f7434c9f7a4e030a3ea2ba84205d93]
class DoublyLinkedList--><rect fill="#FEFECE" filter="url(#f1hc65l2c5d5l5)" height="150.4375" id="DoublyLinkedList" style="stroke: #A80036; stroke-width: 1.5;" width="166" x="224" y="290.9531"/><ellipse cx="248" cy="306.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M250.9688,312.5938 Q250.3906,312.8906 249.75,313.0313 Q249.1094,313.1875 248.4063,313.1875 Q245.9063,313.1875 244.5781,311.5469 Q243.2656,309.8906 243.2656,306.7656 Q243.2656,303.6406 244.5781,301.9844 Q245.9063,300.3281 248.4063,300.3281 Q249.1094,300.3281 249.75,300.4844 Q250.4063,300.6406 250.9688,300.9375 L250.9688,303.6563 Q250.3438,303.0781 249.75,302.8125 Q249.1563,302.5313 248.5313,302.5313 Q247.1875,302.5313 246.5,303.6094 Q245.8125,304.6719 245.8125,306.7656 Q245.8125,308.8594 246.5,309.9375 Q247.1875,311 248.5313,311 Q249.1563,311 249.75,310.7344 Q250.3438,310.4531 250.9688,309.875 L250.9688,312.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="103" x="264" y="311.1074">DoublyLinkedList</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="384" y="287.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="385" y="300.0918">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="225" x2="389" y1="322.9531" y2="322.9531"/><ellipse cx="235" cy="333.9531" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="244" y="337.1636">int Count</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="225" x2="389" y1="343.7578" y2="343.7578"/><ellipse cx="235" cy="354.7578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="244" y="357.9683">void AddFirst(T value)</text><ellipse cx="235" cy="367.5625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="244" y="370.7729">void AddLast(T value)</text><ellipse cx="235" cy="380.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="244" y="383.5776">bool TryRemove(T value)</text><ellipse cx="235" cy="393.1719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="244" y="396.3823">bool Contains(T value)</text><ellipse cx="235" cy="405.9766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="244" y="409.187">T Get(int index)</text><ellipse cx="235" cy="418.7813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="244" y="421.9917">T[] ToArray()</text><ellipse cx="235" cy="431.5859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="244" y="434.7964">T[] ToReversedArray()</text><!--MD5=[c52886bb76afa61968c86449d1f0c8df]
link DynamicArray to CustomLinkedList--><!--MD5=[408b58ad706c257259cf4cf6b425cf50]
link CustomLinkedList to CustomStack--><!--MD5=[5cdc304b24f06b99a03ac127f62004d0]
link DynamicArray to CustomQueue--><!--MD5=[d6ba3ee160011118e8edb0d8df5438b0]
link CustomQueue to DoublyLinkedList--><!--MD5=[93873bde337699d6367b09a9f2cb88cc]
@startuml
title DataStructures - Class Diagram
class DynamicArray<T> {
  +int Count
  +int Capacity
  +T Get(int index)
  +void Set(int index, T value)
  +void Add(T item)
  +void InsertAt(int index, T item)
  +void RemoveAt(int index)
  +void Clear()
  +bool Contains(T item)
  +int IndexOf(T item)
  +T this[int index]
  +IEnumerator<T> GetEnumerator()
}
class CustomLinkedList<T> {
  +int Count
  +void AddFirst(T value)
  +void AddLast(T value)
  +bool TryRemove(T value)
  +bool Contains(T value)
  +T Get(int index)
  +void Clear()
  +T this[int index]
  +IEnumerator<T> GetEnumerator()
}
class CustomStack<T> {
  +void Push(T item)
  +T Pop()
  +T Peek()
  +bool IsEmpty()
  +T[] ToArray()
}
class CustomQueue<T> {
  +void Enqueue(T item)
  +T Dequeue()
  +T Peek()
  +bool IsEmpty()
  +T[] ToArray()
}
class DoublyLinkedList<T> {
  +int Count
  +void AddFirst(T value)
  +void AddLast(T value)
  +bool TryRemove(T value)
  +bool Contains(T value)
  +T Get(int index)
  +T[] ToArray()
  +T[] ToReversedArray()
}
@enduml

PlantUML version 1.2020.02(Sun Mar 01 06:22:07 BOT 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 21.0.7+6-Ubuntu-0ubuntu124.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>