<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="431px" preserveAspectRatio="none" style="width:655px;height:431px;" version="1.1" viewBox="0 0 655 431" width="655px" zoomAndPan="magnify"><defs><filter height="300%" id="f1ha1jdlonqmbi" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[3aa63a95ef306c44c362494faf3eb527]
class DynamicArray--><rect fill="#FEFECE" filter="url(#f1ha1jdlonqmbi)" height="201.6563" id="DynamicArray" style="stroke: #A80036; stroke-width: 1.5;" width="220" x="6" y="8"/><ellipse cx="64.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M67.2188,29.6406 Q66.6406,29.9375 66,30.0781 Q65.3594,30.2344 64.6563,30.2344 Q62.1563,30.2344 60.8281,28.5938 Q59.5156,26.9375 59.5156,23.8125 Q59.5156,20.6875 60.8281,19.0313 Q62.1563,17.375 64.6563,17.375 Q65.3594,17.375 66,17.5313 Q66.6563,17.6875 67.2188,17.9844 L67.2188,20.7031 Q66.5938,20.125 66,19.8594 Q65.4063,19.5781 64.7813,19.5781 Q63.4375,19.5781 62.75,20.6563 Q62.0625,21.7188 62.0625,23.8125 Q62.0625,25.9063 62.75,26.9844 Q63.4375,28.0469 64.7813,28.0469 Q65.4063,28.0469 66,27.7813 Q66.5938,27.5 67.2188,26.9219 L67.2188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="84" x="84.75" y="28.1543">DynamicArray</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="220" y="5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="221" y="17.1387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="225" y1="40" y2="40"/><ellipse cx="17" cy="51" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="26" y="54.2104">int Count</text><ellipse cx="17" cy="63.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="26" y="67.0151">int Capacity</text><ellipse cx="17" cy="76.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="26" y="79.8198">T this[int index]</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="225" y1="86.4141" y2="86.4141"/><ellipse cx="17" cy="97.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="26" y="100.6245">T Get(int index)</text><ellipse cx="17" cy="110.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="26" y="113.4292">void Set(int index, T value)</text><ellipse cx="17" cy="123.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="26" y="126.2339">void Add(T item)</text><ellipse cx="17" cy="135.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="26" y="139.0386">void InsertAt(int index, T item)</text><ellipse cx="17" cy="148.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="26" y="151.8433">void RemoveAt(int index)</text><ellipse cx="17" cy="161.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="26" y="164.6479">void Clear()</text><ellipse cx="17" cy="174.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="26" y="177.4526">bool Contains(T item)</text><ellipse cx="17" cy="187.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="26" y="190.2573">int IndexOf(T item)</text><ellipse cx="17" cy="199.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="26" y="203.062">IEnumerator&lt;T&gt; GetEnumerator()</text><!--MD5=[b5fb6bf1d0c094065f51618994b8f173]
class CustomLinkedList--><rect fill="#FEFECE" filter="url(#f1ha1jdlonqmbi)" height="163.2422" id="CustomLinkedList" style="stroke: #A80036; stroke-width: 1.5;" width="220" x="261" y="27.5"/><ellipse cx="307.25" cy="43.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M310.2188,49.1406 Q309.6406,49.4375 309,49.5781 Q308.3594,49.7344 307.6563,49.7344 Q305.1563,49.7344 303.8281,48.0938 Q302.5156,46.4375 302.5156,43.3125 Q302.5156,40.1875 303.8281,38.5313 Q305.1563,36.875 307.6563,36.875 Q308.3594,36.875 309,37.0313 Q309.6563,37.1875 310.2188,37.4844 L310.2188,40.2031 Q309.5938,39.625 309,39.3594 Q308.4063,39.0781 307.7813,39.0781 Q306.4375,39.0781 305.75,40.1563 Q305.0625,41.2188 305.0625,43.3125 Q305.0625,45.4063 305.75,46.4844 Q306.4375,47.5469 307.7813,47.5469 Q308.4063,47.5469 309,47.2813 Q309.5938,47 310.2188,46.4219 L310.2188,49.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="327.75" y="47.6543">CustomLinkedList</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="475" y="24.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="476" y="36.6387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="262" x2="480" y1="59.5" y2="59.5"/><ellipse cx="272" cy="70.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="281" y="73.7104">int Count</text><ellipse cx="272" cy="83.3047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="281" y="86.5151">T this[int index]</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="262" x2="480" y1="93.1094" y2="93.1094"/><ellipse cx="272" cy="104.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="281" y="107.3198">void AddFirst(T value)</text><ellipse cx="272" cy="116.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="281" y="120.1245">void AddLast(T value)</text><ellipse cx="272" cy="129.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="281" y="132.9292">bool TryRemove(T value)</text><ellipse cx="272" cy="142.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="281" y="145.7339">bool Contains(T value)</text><ellipse cx="272" cy="155.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="281" y="158.5386">T Get(int index)</text><ellipse cx="272" cy="168.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="281" y="171.3433">void Clear()</text><ellipse cx="272" cy="180.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="281" y="184.1479">IEnumerator&lt;T&gt; GetEnumerator()</text><!--MD5=[b4cae84be8cd8acbbb49daa6cbe1ccfb]
class CustomStack--><rect fill="#FEFECE" filter="url(#f1ha1jdlonqmbi)" height="112.0234" id="CustomStack" style="stroke: #A80036; stroke-width: 1.5;" width="125" x="516.5" y="53"/><ellipse cx="531.5" cy="69" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M534.4688,74.6406 Q533.8906,74.9375 533.25,75.0781 Q532.6094,75.2344 531.9063,75.2344 Q529.4063,75.2344 528.0781,73.5938 Q526.7656,71.9375 526.7656,68.8125 Q526.7656,65.6875 528.0781,64.0313 Q529.4063,62.375 531.9063,62.375 Q532.6094,62.375 533.25,62.5313 Q533.9063,62.6875 534.4688,62.9844 L534.4688,65.7031 Q533.8438,65.125 533.25,64.8594 Q532.6563,64.5781 532.0313,64.5781 Q530.6875,64.5781 530,65.6563 Q529.3125,66.7188 529.3125,68.8125 Q529.3125,70.9063 530,71.9844 Q530.6875,73.0469 532.0313,73.0469 Q532.6563,73.0469 533.25,72.7813 Q533.8438,72.5 534.4688,71.9219 L534.4688,74.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="545.5" y="73.1543">CustomStack</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="635.5" y="50"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="636.5" y="62.1387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="517.5" x2="640.5" y1="85" y2="85"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="517.5" x2="640.5" y1="93" y2="93"/><ellipse cx="527.5" cy="104" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="536.5" y="107.2104">void Push(T item)</text><ellipse cx="527.5" cy="116.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="40" x="536.5" y="120.0151">T Pop()</text><ellipse cx="527.5" cy="129.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="536.5" y="132.8198">T Peek()</text><ellipse cx="527.5" cy="142.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="536.5" y="145.6245">bool IsEmpty()</text><ellipse cx="527.5" cy="155.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="536.5" y="158.4292">T[] ToArray()</text><!--MD5=[e044eeb8ee2363764ee438affe3f5539]
class CustomQueue--><rect fill="#FEFECE" filter="url(#f1ha1jdlonqmbi)" height="112.0234" id="CustomQueue" style="stroke: #A80036; stroke-width: 1.5;" width="146" x="43" y="289"/><ellipse cx="64.75" cy="305" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M67.7188,310.6406 Q67.1406,310.9375 66.5,311.0781 Q65.8594,311.2344 65.1563,311.2344 Q62.6563,311.2344 61.3281,309.5938 Q60.0156,307.9375 60.0156,304.8125 Q60.0156,301.6875 61.3281,300.0313 Q62.6563,298.375 65.1563,298.375 Q65.8594,298.375 66.5,298.5313 Q67.1563,298.6875 67.7188,298.9844 L67.7188,301.7031 Q67.0938,301.125 66.5,300.8594 Q65.9063,300.5781 65.2813,300.5781 Q63.9375,300.5781 63.25,301.6563 Q62.5625,302.7188 62.5625,304.8125 Q62.5625,306.9063 63.25,307.9844 Q63.9375,309.0469 65.2813,309.0469 Q65.9063,309.0469 66.5,308.7813 Q67.0938,308.5 67.7188,307.9219 L67.7188,310.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="88" x="80.25" y="309.1543">CustomQueue</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="183" y="286"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="184" y="298.1387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="44" x2="188" y1="321" y2="321"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="44" x2="188" y1="329" y2="329"/><ellipse cx="54" cy="340" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="63" y="343.2104">void Enqueue(T item)</text><ellipse cx="54" cy="352.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="63" y="356.0151">T Dequeue()</text><ellipse cx="54" cy="365.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="63" y="368.8198">T Peek()</text><ellipse cx="54" cy="378.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="63" y="381.6245">bool IsEmpty()</text><ellipse cx="54" cy="391.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="63" y="394.4292">T[] ToArray()</text><!--MD5=[35f7434c9f7a4e030a3ea2ba84205d93]
class DoublyLinkedList--><rect fill="#FEFECE" filter="url(#f1ha1jdlonqmbi)" height="150.4375" id="DoublyLinkedList" style="stroke: #A80036; stroke-width: 1.5;" width="166" x="224" y="270"/><ellipse cx="248" cy="286" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M250.9688,291.6406 Q250.3906,291.9375 249.75,292.0781 Q249.1094,292.2344 248.4063,292.2344 Q245.9063,292.2344 244.5781,290.5938 Q243.2656,288.9375 243.2656,285.8125 Q243.2656,282.6875 244.5781,281.0313 Q245.9063,279.375 248.4063,279.375 Q249.1094,279.375 249.75,279.5313 Q250.4063,279.6875 250.9688,279.9844 L250.9688,282.7031 Q250.3438,282.125 249.75,281.8594 Q249.1563,281.5781 248.5313,281.5781 Q247.1875,281.5781 246.5,282.6563 Q245.8125,283.7188 245.8125,285.8125 Q245.8125,287.9063 246.5,288.9844 Q247.1875,290.0469 248.5313,290.0469 Q249.1563,290.0469 249.75,289.7813 Q250.3438,289.5 250.9688,288.9219 L250.9688,291.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="103" x="264" y="290.1543">DoublyLinkedList</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="9" x="384" y="267"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="7" x="385" y="279.1387">T</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="225" x2="389" y1="302" y2="302"/><ellipse cx="235" cy="313" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="244" y="316.2104">int Count</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="225" x2="389" y1="322.8047" y2="322.8047"/><ellipse cx="235" cy="333.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="244" y="337.0151">void AddFirst(T value)</text><ellipse cx="235" cy="346.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="244" y="349.8198">void AddLast(T value)</text><ellipse cx="235" cy="359.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="244" y="362.6245">bool TryRemove(T value)</text><ellipse cx="235" cy="372.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="244" y="375.4292">bool Contains(T value)</text><ellipse cx="235" cy="385.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="244" y="388.2339">T Get(int index)</text><ellipse cx="235" cy="397.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="244" y="401.0386">T[] ToArray()</text><ellipse cx="235" cy="410.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="244" y="413.8433">T[] ToReversedArray()</text><!--MD5=[c52886bb76afa61968c86449d1f0c8df]
link DynamicArray to CustomLinkedList--><!--MD5=[408b58ad706c257259cf4cf6b425cf50]
link CustomLinkedList to CustomStack--><!--MD5=[5cdc304b24f06b99a03ac127f62004d0]
link DynamicArray to CustomQueue--><!--MD5=[d6ba3ee160011118e8edb0d8df5438b0]
link CustomQueue to DoublyLinkedList--><!--MD5=[1617225e43578c6454a4908ddc2e2246]
@startuml
class DynamicArray<T> {
  +int Count
  +int Capacity
  +T Get(int index)
  +void Set(int index, T value)
  +void Add(T item)
  +void InsertAt(int index, T item)
  +void RemoveAt(int index)
  +void Clear()
  +bool Contains(T item)
  +int IndexOf(T item)
  +T this[int index]
  +IEnumerator<T> GetEnumerator()
}
class CustomLinkedList<T> {
  +int Count
  +void AddFirst(T value)
  +void AddLast(T value)
  +bool TryRemove(T value)
  +bool Contains(T value)
  +T Get(int index)
  +void Clear()
  +T this[int index]
  +IEnumerator<T> GetEnumerator()
}
class CustomStack<T> {
  +void Push(T item)
  +T Pop()
  +T Peek()
  +bool IsEmpty()
  +T[] ToArray()
}
class CustomQueue<T> {
  +void Enqueue(T item)
  +T Dequeue()
  +T Peek()
  +bool IsEmpty()
  +T[] ToArray()
}
class DoublyLinkedList<T> {
  +int Count
  +void AddFirst(T value)
  +void AddLast(T value)
  +bool TryRemove(T value)
  +bool Contains(T value)
  +T Get(int index)
  +T[] ToArray()
  +T[] ToReversedArray()
}
@enduml

PlantUML version 1.2020.02(Sun Mar 01 06:22:07 BOT 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 21.0.7+6-Ubuntu-0ubuntu124.04
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>